{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"어쩌다 코딩","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"정적언어 + 타입추론 => 성능과 정확성 간결한 소스코드 객체지향과 함수형프로그래밍 모두 지원 코틀린은 일급시민함수 지원, 람다식(코드블록쉽게정의), 데이터 클래스는 불변객체 간편하게 만들수 있는 구문 제공, 표준라이브러리에서 객체와 컬렉션을 함수형 스타일로 다룰 수 있는 API 제공 함수형 프로그래밍 :   로 높은 추상화 가능 ( 공통되는 부분 함수로…","fields":{"slug":"/kotlin/1장. kotlin 개요/"},"frontmatter":{"date":"August 19, 2021","title":"1장. kotlin 개요","category":"kotlin","draft":false}}},{"node":{"excerpt":"자바와 차이점 꼭 클래스 안에 함수 넣을 필요 없음 , 최상위 수준에 정의 가능  배열에 관한 문법 없음 println 표준 라이브러리 간결하게 쓸수 있게 래퍼 제공  자바에서는 모든 제어구조가 문이지만 코틀린은 루프제외하고 대부분 식식은 값을 만들어 내며 다른 식의 하위 요소로 계산에 참여 가능 자바에서 대입(assign, =)은 식이었으나 코틀린에서는…","fields":{"slug":"/kotlin/2장.-코틀린-기초-문법/"},"frontmatter":{"date":"August 19, 2021","title":"2장. 코틀린 기초 문법","category":"kotlin","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","767493094"]}